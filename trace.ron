[
Init(
    desc: (
        extensions: (
            bits: 0,
        ),
        limits: (
            max_bind_groups: 1,
            _non_exhaustive: (()),
        ),
    ),
    backend: Vulkan,
),
CreateBuffer(
    id: Id(0, 1, Vulkan),
    desc: (
        label: "Staging Buffer",
        size: 16,
        usage: (
            bits: 9,
        ),
        mapped_at_creation: false,
    ),
),
CreateBuffer(
    id: Id(1, 1, Vulkan),
    desc: (
        label: "Storage Buffer",
        size: 16,
        usage: (
            bits: 204,
        ),
        mapped_at_creation: false,
    ),
),
WriteBuffer(
    id: Id(1, 1, Vulkan),
    data: "data1.bin",
    range: (
        start: 0,
        end: 16,
    ),
    queued: true,
),
CreateBindGroupLayout(
    id: Id(0, 1, Vulkan),
    label: "bind group layout",
    entries: [
        (
            binding: 0,
            visibility: (
                bits: 4,
            ),
            ty: StorageBuffer,
            multisampled: false,
            has_dynamic_offset: false,
            view_dimension: D1,
            texture_component_type: Float,
            storage_texture_format: R8Unorm,
        ),
    ],
),
CreateBindGroup(
    id: Id(0, 1, Vulkan),
    label: "bind group",
    layout_id: Id(0, 1, Vulkan),
    entries: {
        0: Buffer(
            id: Id(1, 1, Vulkan),
            offset: 0,
            size: Size(16),
        ),
    },
),
CreatePipelineLayout(
    id: Id(0, 1, Vulkan),
    bind_group_layouts: [
        Id(0, 1, Vulkan),
    ],
),
CreateShaderModule(
    id: Id(0, 1, Vulkan),
    data: "data2.spv",
),
CreateComputePipeline(
    id: Id(0, 1, Vulkan),
    desc: (
        layout: Id(0, 1, Vulkan),
        compute_stage: (
            module: Id(0, 1, Vulkan),
            entry_point: "main",
        ),
    ),
),
Submit(2, [
    RunComputePass(
        commands: [
            SetPipeline(Id(0, 1, Vulkan)),
            SetBindGroup(
                index: 0,
                num_dynamic_offsets: 0,
                bind_group_id: Id(0, 1, Vulkan),
            ),
            Dispatch((4, 1, 1)),
        ],
        dynamic_offsets: [],
    ),
    CopyBufferToBuffer(
        src: Id(1, 1, Vulkan),
        src_offset: 0,
        dst: Id(0, 1, Vulkan),
        dst_offset: 0,
        size: 16,
    ),
]),
