plugins {
    id 'java-library'
}

group 'com.noahcharlton.wgpuj'
version '0.1.0'

sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.github.jnr', name: 'jnr-ffi', version: '2.1.15'
    compile group: 'com.github.jnr', name: 'jffi', version: '1.2.23'

    testImplementation("org.junit.jupiter:junit-jupiter-params:5.4.2")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    useJUnitPlatform()
}

task createNatives(type: Copy){
    from("${projectDir}/wgpu-native/target/debug") {
        include 'wgpu_native.dll'
        include 'wgpu_native.so'
        include 'wgpu_native.dylib'
    }
    into "${projectDir}/src/main/resources"
}

task cargoBuild(type:Exec) {
    workingDir "${projectDir}/wgpu-native"
    commandLine 'cargo', 'build'
}

task createTestNatives(type: Copy){
    from("${projectDir}/wgpu-test/target/debug") {
        include 'wgpu_test.dll'
        include 'wgpu_test.so'
        include 'wgpu_test.dylib'
    }
    into "${projectDir}/src/test/resources"
}

task cargoTestBuild(type:Exec) {
    workingDir "${projectDir}/wgpu-test"
    commandLine 'cargo', 'build'
}

compileJava.dependsOn createNatives
compileTestJava.dependsOn createTestNatives
createNatives.dependsOn cargoBuild
createTestNatives.dependsOn cargoTestBuild