package com.noahcharlton.wgpuj.jnrgen;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;

public class OutputHandler {

    private final File outputDirectory;
    private final String packageName = "com.noahcharlton.wgpuj.jni";
    private final String commentHeader = "/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */";

    private final HashMap<String, Item> types = new HashMap<>();
    private final HashMap<String, String> aliases = new HashMap<>();

    public OutputHandler(File outputDirectory) {
        this.outputDirectory = outputDirectory;
    }

    public BufferedWriter startFile(String name, String... imports) throws IOException {
        File file = outputDirectory.toPath().resolve(name).toFile();

        var writer = new BufferedWriter(new FileWriter(file));
        writer.write("package ");
        writer.write(packageName);
        writer.write(";\n\n");

        for(String import_: imports){
            writer.write("import ");
            writer.write(import_);
            writer.write(";\n");
        }

        writer.write("\n");
        writer.write(commentHeader);
        writer.write("\n");

        return writer;
    }

    public void registerType(String type, Item item){
        types.put(type, item);
    }

    public void registerTypeAlias(String actualType, String typeAlias){
        aliases.put(typeAlias, actualType);
    }

    public boolean containsType(String type) {
        return types.containsKey(type);
    }

    public boolean containsAlias(String type) {
        return aliases.containsKey(type);
    }

    public Item resolveType(String type) {
        return types.get(type);
    }

    public String getAlias(String type) {
        return aliases.get(type);
    }
}
