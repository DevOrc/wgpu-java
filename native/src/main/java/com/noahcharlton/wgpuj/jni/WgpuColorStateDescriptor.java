package com.noahcharlton.wgpuj.jni;

import com.noahcharlton.wgpuj.WgpuJava;
import com.noahcharlton.wgpuj.util.WgpuJavaStruct;
import com.noahcharlton.wgpuj.util.CStrPointer;
import com.noahcharlton.wgpuj.util.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuColorStateDescriptor extends WgpuJavaStruct {

    private final Struct.Enum<WgpuTextureFormat> format = new Struct.Enum<>(WgpuTextureFormat.class);
    private final WgpuBlendDescriptor alphaBlend = inner(WgpuBlendDescriptor.createHeap());
    private final WgpuBlendDescriptor colorBlend = inner(WgpuBlendDescriptor.createHeap());
    private final Struct.Unsigned32 writeMask = new Struct.Unsigned32();

    private WgpuColorStateDescriptor(){}

    @Deprecated
    public WgpuColorStateDescriptor(Runtime runtime){
        super(runtime);
    }

    public static WgpuColorStateDescriptor createHeap(){
        return new WgpuColorStateDescriptor();
    }

    public static WgpuColorStateDescriptor createDirect(){
        var struct = new WgpuColorStateDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public WgpuTextureFormat getFormat(){
        return format.get();
    }

    public void setFormat(WgpuTextureFormat x){
        this.format.set(x);
    }

    public WgpuBlendDescriptor getAlphaBlend(){
        return alphaBlend;
    }

    public WgpuBlendDescriptor getColorBlend(){
        return colorBlend;
    }

    public long getWriteMask(){
        return writeMask.get();
    }

    public void setWriteMask(long x){
        this.writeMask.set(x);
    }

}