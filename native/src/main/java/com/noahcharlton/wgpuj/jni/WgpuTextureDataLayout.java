package com.noahcharlton.wgpuj.jni;

import com.noahcharlton.wgpuj.WgpuJava;
import com.noahcharlton.wgpuj.util.WgpuJavaStruct;
import com.noahcharlton.wgpuj.util.CStrPointer;
import com.noahcharlton.wgpuj.util.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuTextureDataLayout extends WgpuJavaStruct {

    private final Struct.Unsigned64 offset = new Struct.Unsigned64();
    private final Struct.Unsigned32 bytesPerRow = new Struct.Unsigned32();
    private final Struct.Unsigned32 rowsPerImage = new Struct.Unsigned32();

    private WgpuTextureDataLayout(){}

    @Deprecated
    public WgpuTextureDataLayout(Runtime runtime){
        super(runtime);
    }

    public static WgpuTextureDataLayout createHeap(){
        return new WgpuTextureDataLayout();
    }

    public static WgpuTextureDataLayout createDirect(){
        var struct = new WgpuTextureDataLayout();
        struct.useDirectMemory();
        return struct;
    }


    public long getOffset(){
        return offset.get();
    }

    public void setOffset(long x){
        this.offset.set(x);
    }

    public long getBytesPerRow(){
        return bytesPerRow.get();
    }

    public void setBytesPerRow(long x){
        this.bytesPerRow.set(x);
    }

    public long getRowsPerImage(){
        return rowsPerImage.get();
    }

    public void setRowsPerImage(long x){
        this.rowsPerImage.set(x);
    }

}