package com.noahcharlton.wgpuj.jni;

import com.noahcharlton.wgpuj.util.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuRasterizationStateDescriptor extends WgpuJavaStruct {

    private final Enum<WgpuFrontFace> frontFace = new Enum<>(WgpuFrontFace.class);
    private final Enum<WgpuCullMode> cullMode = new Enum<>(WgpuCullMode.class);
    private final Signed32 depthBias = new Signed32();
    private final Float depthBiasSlopeScale = new Float();
    private final Float depthBiasClamp = new Float();

    private WgpuRasterizationStateDescriptor(){}

    @Deprecated
    public WgpuRasterizationStateDescriptor(Runtime runtime){
        super(runtime);
    }

    public static WgpuRasterizationStateDescriptor createHeap(){
        return new WgpuRasterizationStateDescriptor();
    }

    public static WgpuRasterizationStateDescriptor createDirect(){
        var struct = new WgpuRasterizationStateDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public WgpuFrontFace getFrontFace(){
        return frontFace.get();
    }

    public void setFrontFace(WgpuFrontFace x){
        this.frontFace.set(x);
    }

    public WgpuCullMode getCullMode(){
        return cullMode.get();
    }

    public void setCullMode(WgpuCullMode x){
        this.cullMode.set(x);
    }

    public int getDepthBias(){
        return depthBias.get();
    }

    public void setDepthBias(int x){
        this.depthBias.set(x);
    }

    public float getDepthBiasSlopeScale(){
        return depthBiasSlopeScale.get();
    }

    public void setDepthBiasSlopeScale(float x){
        this.depthBiasSlopeScale.set(x);
    }

    public float getDepthBiasClamp(){
        return depthBiasClamp.get();
    }

    public void setDepthBiasClamp(float x){
        this.depthBiasClamp.set(x);
    }

}