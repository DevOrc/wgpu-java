package com.noahcharlton.wgpuj.jni;

import com.noahcharlton.wgpuj.util.WgpuJavaStruct;
import com.noahcharlton.wgpuj.util.CStrPointer;
import com.noahcharlton.wgpuj.util.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuBufferDescriptor extends WgpuJavaStruct {

    private final @CStrPointer Pointer label = new Pointer();
    private final Unsigned64 size = new Unsigned64();
    private final Unsigned32 usage = new Unsigned32();
    private final Boolean mappedAtCreation = new Boolean();

    private WgpuBufferDescriptor(){}

    private WgpuBufferDescriptor(Runtime runtime){
        super(runtime);
    }

    public static WgpuBufferDescriptor createHeap(){
        return new WgpuBufferDescriptor();
    }

    public static WgpuBufferDescriptor createDirect(){
        var struct = new WgpuBufferDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public java.lang.String getLabel(){
        return RustCString.fromPointer(label.get());
    }

    public void setLabel(java.lang.String x){
        this.label.set(RustCString.toPointer(x));
    }

    public long getSize(){
        return size.get();
    }

    public void setSize(long x){
        this.size.set(x);
    }

    public long getUsage(){
        return usage.get();
    }

    public void setUsage(long x){
        this.usage.set(x);
    }

    public boolean getMappedAtCreation(){
        return mappedAtCreation.get();
    }

    public void setMappedAtCreation(boolean x){
        this.mappedAtCreation.set(x);
    }

}