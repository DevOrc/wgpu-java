plugins {
    id 'java-library'
}

group 'com.noahcharlton.wgpuj'
version '0.1.0'

sourceCompatibility = 11

repositories {
    mavenCentral()
}

import org.gradle.internal.os.OperatingSystem

project.ext.lwjglVersion = "3.2.3"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

dependencies {
    api project(':native')
    api "org.joml:joml:1.9.25"

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-shaderc"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-shaderc::$lwjglNatives"

    testImplementation("org.junit.jupiter:junit-jupiter-params:5.4.2")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        events "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
    }

    afterSuite { desc, result ->
        if (!desc.parent) { // will match the outermost suite
            println "Found an ran ${result.testCount} tests"
            print "Results: ${result.resultType} "
            print "${result.successfulTestCount} successes, "
            print "${result.failedTestCount} failures, "
            println "${result.skippedTestCount} skipped)"
        }
    }
}